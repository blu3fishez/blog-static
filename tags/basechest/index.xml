<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>BaseChest on blog.blu3fishez</title>
    <link>https://blog.blu3fishez.org/tags/basechest/</link>
    <description>Recent content in BaseChest on blog.blu3fishez</description>
    <image>
      <title>blog.blu3fishez</title>
      <url>https://blog.blu3fishez.org/images/papermod-cover.png</url>
      <link>https://blog.blu3fishez.org/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.151.0</generator>
    <language>en</language>
    <copyright>blu3fishez</copyright>
    <lastBuildDate>Thu, 30 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.blu3fishez.org/tags/basechest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Docker] 도커 컴포즈 및 컨테이너 간 네트워킹에 대해서 알아보자</title>
      <link>https://blog.blu3fishez.org/posts/2025/20251030-%EB%8F%84%EC%BB%A4-%EC%BB%B4%ED%8F%AC%EC%A6%88-%EB%B0%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EA%B0%84-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</link>
      <pubDate>Thu, 30 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.blu3fishez.org/posts/2025/20251030-%EB%8F%84%EC%BB%A4-%EC%BB%B4%ED%8F%AC%EC%A6%88-%EB%B0%8F-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EA%B0%84-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</guid>
      <description>&lt;p&gt;&lt;code&gt;Docker&lt;/code&gt; 자체는 가상화 엔진이다.&lt;/p&gt;
&lt;p&gt;하지만 도커가 한번에 하나의 프로그램만 실행시킬 수 있었다면 이렇게까지 인기를 얻진 못했으리라.
여러개의 컨테이너를 올리고, 하나의 컴퓨터 내에서 각각 독립된 환경에서 실행과 네트워킹이 가능하기 때문에 유용하다고 생각했다.
하지만 구체적으로 어떻게 네트워킹하는지에 대해서 생각해보진 못했는데, 이번 기회에 알아보자.&lt;/p&gt;
&lt;p&gt;일단, 개개의 컨테이너는 여러가지 환경에 처할 수 있다. 컨테이너가 생성되고 실행되는 환경은 대략적으로 크게 두가지로 정리될 수 있을 것이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하나의 &lt;code&gt;Compose&lt;/code&gt;  내에서 실행될 때&lt;/li&gt;
&lt;li&gt;독립적인 컨테이너로써 실행될 때&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;개개의 경우의 수에서 각각의 &lt;code&gt;hostname&lt;/code&gt; 과 도커 엔진이 제공하는 예약어가 어떻게 작동하는지 기술해보았다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
