<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ORM on blog.moozeh</title>
    <link>http://localhost:1313/tags/orm/</link>
    <description>Recent content in ORM on blog.moozeh</description>
    <image>
      <title>blog.moozeh</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <copyright>moozeh</copyright>
    <lastBuildDate>Fri, 31 Jan 2025 22:39:35 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/orm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Spring JPA] JPA에 대해 알아보자</title>
      <link>http://localhost:1313/posts/2025-01-31-spring-jpa%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</link>
      <pubDate>Fri, 31 Jan 2025 22:39:35 +0900</pubDate>
      <guid>http://localhost:1313/posts/2025-01-31-spring-jpa%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</guid>
      <description>&lt;!-- draft 값을 false 혹은 제거해야 게시됩니다!!! --&gt;
&lt;p&gt;JPA 에 대해 기본적인 내용을 훑는다. 기본적인 내용을 알고 있다면 무시해도 좋다.&lt;/p&gt;
&lt;!-- more --&gt; 
&lt;h2 id=&#34;jpa-를-사용하는-이유&#34;&gt;JPA 를 사용하는 이유&lt;/h2&gt;
&lt;p&gt;JPA를 사용하는 이유는 쿼리를 수행하는 테이블의 개수가 복잡해질수록 간단하게 코드 구현이 가능하기 때문이다.&lt;/p&gt;
&lt;h2 id=&#34;entity의-정의&#34;&gt;Entity의 정의&lt;/h2&gt;
&lt;p&gt;JPA를 사용하면, Bean 데이터를 직접 테이블로 매핑할 수 있는데, 이때 이 Bean을 엔티티 라고 부르게 된다. 즉, &lt;code&gt;Entity&lt;/code&gt; 는 &lt;code&gt;Bean&lt;/code&gt; 이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;추가적으로 더 나아가면 Nest.js 에서 엔티티를 어떻게 정의할지 생각해볼 수 있을 것이다.&lt;/strong&gt;  꼭 Database 코드에 있어야하는 이유가 없고, &lt;code&gt;Bean&lt;/code&gt; 을 어떻게 활용할지 생각해보면 엔티티를 사용하는데 있어서 이해가 빠를 것이다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
