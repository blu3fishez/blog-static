<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Database on blog.moozeh</title>
    <link>https://blog.moozeh.org/tags/database/</link>
    <description>Recent content in Database on blog.moozeh</description>
    <image>
      <title>blog.moozeh</title>
      <url>https://blog.moozeh.org/images/papermod-cover.png</url>
      <link>https://blog.moozeh.org/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <copyright>moozeh</copyright>
    <lastBuildDate>Fri, 31 Jan 2025 22:39:35 +0900</lastBuildDate>
    <atom:link href="https://blog.moozeh.org/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Spring JPA] JPA에 대해 알아보자</title>
      <link>https://blog.moozeh.org/posts/2025-01-31-spring-jpa%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</link>
      <pubDate>Fri, 31 Jan 2025 22:39:35 +0900</pubDate>
      <guid>https://blog.moozeh.org/posts/2025-01-31-spring-jpa%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</guid>
      <description>&lt;!-- draft 값을 false 혹은 제거해야 게시됩니다!!! --&gt;
&lt;p&gt;JPA 에 대해 기본적인 내용을 훑는다. 기본적인 내용을 알고 있다면 무시해도 좋다.&lt;/p&gt;
&lt;!-- more --&gt; 
&lt;h2 id=&#34;jpa-를-사용하는-이유&#34;&gt;JPA 를 사용하는 이유&lt;/h2&gt;
&lt;p&gt;JPA를 사용하는 이유는 쿼리를 수행하는 테이블의 개수가 복잡해질수록 간단하게 코드 구현이 가능하기 때문이다.&lt;/p&gt;
&lt;h2 id=&#34;entity의-정의&#34;&gt;Entity의 정의&lt;/h2&gt;
&lt;p&gt;JPA를 사용하면, Bean 데이터를 직접 테이블로 매핑할 수 있는데, 이때 이 Bean을 엔티티 라고 부르게 된다. 즉, &lt;code&gt;Entity&lt;/code&gt; 는 &lt;code&gt;Bean&lt;/code&gt; 이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;추가적으로 더 나아가면 Nest.js 에서 엔티티를 어떻게 정의할지 생각해볼 수 있을 것이다.&lt;/strong&gt;  꼭 Database 코드에 있어야하는 이유가 없고, &lt;code&gt;Bean&lt;/code&gt; 을 어떻게 활용할지 생각해보면 엔티티를 사용하는데 있어서 이해가 빠를 것이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Spring] Spring JDBC의 특징</title>
      <link>https://blog.moozeh.org/posts/2025-01-29-spring-jdbc%EC%9D%98-%ED%8A%B9%EC%A7%95/</link>
      <pubDate>Wed, 29 Jan 2025 13:35:24 +0900</pubDate>
      <guid>https://blog.moozeh.org/posts/2025-01-29-spring-jdbc%EC%9D%98-%ED%8A%B9%EC%A7%95/</guid>
      <description>&lt;!-- truncate --&gt;
&lt;p&gt;마인크래프트 플러그인을 만들면서 기존 &lt;code&gt;JDBC&lt;/code&gt; 를 썼다. 그런데, &lt;code&gt;Spring JDBC&lt;/code&gt; 와는 무슨 차이일까. 그 차이점을 알아보자.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;jdbc란&#34;&gt;JDBC란&lt;/h2&gt;
&lt;p&gt;JDBC는 1997년 Sun Microsystems (현재 Oracle) 에서 개발된 데이터베이스 접근 드라이버다.&lt;/p&gt;
&lt;p&gt;사실상 자바 플랫폼의 핵심 API로 시작되어 현재까지 표준 데이터베이스 접근 방식으로 사용되고 있다.&lt;/p&gt;
&lt;h2 id=&#34;spring-jdbc란&#34;&gt;Spring JDBC란&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt; 개발팀이 &lt;code&gt;Spring Framework 1.0&lt;/code&gt; 의 일부로 출시하며 같이 개발된 모듈로, &lt;code&gt;JDBC&lt;/code&gt; 의 복잡성을 줄이고 생산성을 높이기 위해 만들어졌다.&lt;/p&gt;
&lt;p&gt;따라서, &lt;code&gt;Spring JDBC&lt;/code&gt; 라고 해서 특별한게 있는게 아닌, &lt;strong&gt;기존 &lt;code&gt;JDBC&lt;/code&gt; 의 래퍼&lt;/strong&gt;라고 생각하면 좋다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ERD 슈퍼타입-서브타입 관계에 대해서 알아보자</title>
      <link>https://blog.moozeh.org/posts/2025-01-25-erd-%EC%8A%88%ED%8D%BC%ED%83%80%EC%9E%85-%EC%84%9C%EB%B8%8C%ED%83%80%EC%9E%85%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</link>
      <pubDate>Sat, 25 Jan 2025 15:20:14 +0900</pubDate>
      <guid>https://blog.moozeh.org/posts/2025-01-25-erd-%EC%8A%88%ED%8D%BC%ED%83%80%EC%9E%85-%EC%84%9C%EB%B8%8C%ED%83%80%EC%9E%85%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90/</guid>
      <description>&lt;!-- truncate --&gt;
&lt;p&gt;네이버 부스트캠프 9기 가 끝난 후, 안드로이드 팀의 그룹프로젝트 &lt;code&gt;Porring&lt;/code&gt; 에 리팩토링 프로젝트에 참여하여 백엔드로 참여하면서 생긴 일이다.&lt;/p&gt;
&lt;h2 id=&#34;슈퍼타입---서브타입-관계란&#34;&gt;슈퍼타입 - 서브타입 관계란?&lt;/h2&gt;
&lt;p&gt;ERD의 특정 관계를 뜻하는데, 정확하게는 &lt;strong&gt;객체지향의 상속 개념과 유사한 데이터 모델링 패턴&lt;/strong&gt;이다.&lt;/p&gt;
&lt;h3 id=&#34;슈퍼타입&#34;&gt;슈퍼타입&lt;/h3&gt;
&lt;p&gt;예를 들어, 슈퍼타입은 &lt;strong&gt;부모 클래스&lt;/strong&gt;에 해당하며, 공동 톳것ㅇ을 가진 일반적인 특징이 있다.&lt;/p&gt;
&lt;p&gt;예를 들면 직원에 해당된다.&lt;/p&gt;
&lt;h3 id=&#34;서브타입&#34;&gt;서브타입&lt;/h3&gt;
&lt;p&gt;서브타입은 슈퍼 타입의 &lt;strong&gt;특수한 형태&lt;/strong&gt;로, 고유 속성을 추가로 지니는 특성이 있다.&lt;/p&gt;
&lt;p&gt;예를 들면 그 직원이 정규직인지, 계약직인지 여부를 나타내는 세부 정보들을 뜻한다. 이때, &lt;strong&gt;세부 정보에 해당되는 정보만 남기도록 한다.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
